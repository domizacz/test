@page "/"
@using Data;


Remote Hand List for 
<p>
  <button class="btn " @onclick="Countout">-</button>
  <button @onclick="@calend" class="btn btn-primary" type="button" data-bs-toggle="collapse" data-bs-target="#collapseWidthExample" aria-expanded="false" aria-controls="collapseWidthExample">
    @friday.Month/@friday.Day/@friday.Year 
  </button><button class="btn " @onclick="IncrementCount">+</button>
</p>
<div style="min-height: 120px;">
  <div class="@collapse" id="">
    <div class="card card-body" style="width: 300px;">
      Calendar ytesy alshdalsd
    </div>
  </div>
</div>


<table class="table table-striped table-hover">
   
 <thead>
  <tr class="table-active">
    <td class="table-primary">Client</td>
    <td class="table-primary">Location</td>
    <td class="table-primary">Case</td>
    <td class="table-primary">Task</td>
    <td class="table-primary">Details</td>
    <td class="table-primary">Instruction</td>
    <td class="table-primary">Status</td>
    <td class="table-primary">Tested</td>
    <td class="table-primary">Support</td>
    <td class="table-primary">Networking</td>
    <td class="table-primary">Remote Hands</td>
    <td class="table-primary">Date Added</td>
   </tr>
   </thead>
 

   <tbody>
    @foreach(ClassRH RMHList in ListofRemote)
    {
        @if (@Area != @RMHList.Area)
            {
                
                <tr>            
                        <td class="table-info text-center table-primary" colspan="12"><b>@(Area = RMHList.Area)</b></td>
           </tr>
            }
    @if (DateOnly.FromDateTime(friday)==RMHList.Data_work)
    {
    
            <tr>
    <td scope="row">@RMHList.Clinet</td>
    <td class="">@RMHList.Location</td>
    <td class="">@RMHList.Case</td>
    <td class="">@RMHList.Task</td>
    <td class="">@RMHList.Details</td>
    <td class=".container-sm text-truncate"> @LimitText(@RMHList.Instruction)</td>
    <td class="">
        <select class="form-select form-select-sm" aria-label=".form-select-sm example">
            
             @foreach(string stat in status_lab)
                    {
                        if(RMHList.status== stat)
                        {<option selected value="@stat">@stat</option>}else
                        {<option value="@stat">@stat</option>}
                        
                    }
                </select>
</td>
    <td class="">@RMHList.tested</td>
    <td class="">@RMHList.Support</td>
    <td class="">@RMHList.Networking</td>
    <td class="">@RMHList.RemoteHand</td>
    <td class="">@RMHList.Date_Added.Date</td>
   </tr>
   }
   
}
  </tbody>

 

</table>



@code{

    @using Data;


    public DateTime friday = DateTime.Now;
    public DateOnly data =new DateOnly( DateTime.Today.Year , DateTime.Today.Month, DateTime.Today.Day);
    public string collapse = "collapse";
    public List<ClassRH> ListofRemote;
    public List<string> status_lab = new List<string>() {"Pending", "Sent", "Provided", "Tested", "Notified", "Completed", "Delayed", "Cancle"};
    public Demo temp = new Demo();
    public string Area;



    protected override async Task OnInitializedAsync()
    {

        ListofRemote = temp.DemoRH();

         ListofRemote.Sort(delegate(ClassRH x, ClassRH y)
        {
            if (x.Location == null && y.Location == null) return 0;
            else if (x.Location == null) return -1;
            else if (y.Location == null) return 1;
            else return x.Location.CompareTo(y.Location);
        });

        

       

        fri_day(0);


    }
    public void IncrementCount()
    {
        fri_day(7);
    }
    public void Countout()
    {
        fri_day(-7);
    }

    public void calend()
    {
        if (collapse == "collapse")
        { collapse = ""; }
        else {collapse = "collapse"; }

    }
    public void fri_day(int day)
    {
        int a = 0;
        if (day == 0)
        {
            while (a < 2)
            {

                if (friday.DayOfWeek == DayOfWeek.Friday)
                {
                    a = 2;

                }
                else
                {
                    friday = friday.AddDays(1);
                }
            }
        }
        else{

            friday= friday.AddDays(day);

        }

    }
    public string LimitText (string text)
    {
        return text.Substring(0, 12)+"...";
    }


}
